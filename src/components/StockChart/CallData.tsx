import { Ticker } from "../../types/Ticker";
import { restClient } from '@polygon.io/client-js';

async function CallData(ticker: Ticker) {
    // random mock data util i fix that stupid backend 
    const rest = restClient(process.env.REACT_APP_API_KEY);
    rest.stocks.aggregates("AAPL", 1, "day", "2024-01-01", "2025-04-14").then((data) => {
        console.log(data.results);
        // return data; 
    }).catch(e => {
        console.error('An error happened:', e);
    });
    // console.log(process.env.REACT_APP_API_KEY); 
     const response = {"chart":{"result":[{"meta":{"currency":"USD","symbol":"MSFT","exchangeName":"NMS","fullExchangeName":"NasdaqGS","instrumentType":"EQUITY","firstTradeDate":511108200,"regularMarketTime":1747857601,"hasPrePostMarketData":true,"gmtoffset":-14400,"timezone":"EDT","exchangeTimezoneName":"America/New_York","regularMarketPrice":452.57,"fiftyTwoWeekHigh":468.35,"fiftyTwoWeekLow":344.79,"regularMarketDayHigh":457.78,"regularMarketDayLow":451.814,"regularMarketVolume":18399615,"longName":"Microsoft Corporation","shortName":"Microsoft Corporation","chartPreviousClose":359.12,"priceHint":2,"currentTradingPeriod":{"pre":{"timezone":"EDT","end":1747920600,"start":1747900800,"gmtoffset":-14400},"regular":{"timezone":"EDT","end":1747944000,"start":1747920600,"gmtoffset":-14400},"post":{"timezone":"EDT","end":1747958400,"start":1747944000,"gmtoffset":-14400}},"dataGranularity":"1d","range":"1mo","validRanges":["1d","5d","1mo","3mo","6mo","1y","2y","5y","10y","ytd","max"]},"timestamp":[1745328600,1745415000,1745501400,1745587800,1745847000,1745933400,1746019800,1746106200,1746192600,1746451800,1746538200,1746624600,1746711000,1746797400,1747056600,1747143000,1747229400,1747315800,1747402200,1747661400,1747747800,1747834200],"indicators":{"quote":[{"volume":[19485000,20545500,22232300,18973200,16579400,14974000,36461100,58938100,30757400,20136100,15104200,23295300,23491300,15324200,22821900,23618800,19902800,21992300,23849800,21336500,15441800,19201000],"close":[366.82000732421875,374.3900146484375,387.29998779296875,391.8500061035156,391.1600036621094,394.0400085449219,395.260009765625,425.3999938964844,435.2799987792969,436.1700134277344,433.30999755859375,433.3500061035156,438.1700134277344,438.7300109863281,449.260009765625,449.1400146484375,452.94000244140625,453.1300048828125,454.2699890136719,458.8699951171875,458.1700134277344,452.57000732421875],"low":[359.8599853515625,373.0199890136719,375.19000244140625,384.6000061035156,386.6400146484375,390.3800048828125,384.44000244140625,424.8999938964844,429.989990234375,432.1099853515625,431.1700134277344,431.1099853515625,435.6600036621094,435.8800048828125,439.7799987792969,445.3599853515625,448.1400146484375,450.42999267578125,448.7300109863281,450.79998779296875,454.32000732421875,451.80999755859375],"open":[363.3800048828125,376.05999755859375,375.70001220703125,387.0,391.9599914550781,391.29998779296875,390.29998779296875,431.1099853515625,431.739990234375,432.8699951171875,432.20001220703125,433.8399963378906,437.92999267578125,440.0,445.94000244140625,447.7799987792969,448.1400146484375,450.7699890136719,452.04998779296875,450.8800048828125,455.5899963378906,454.57000732421875],"high":[367.7699890136719,380.3900146484375,388.45001220703125,392.1600036621094,392.739990234375,395.1000061035156,396.6600036621094,436.989990234375,439.44000244140625,439.5,437.7300109863281,438.1199951171875,443.6700134277344,440.739990234375,449.3699951171875,450.6700134277344,453.8999938964844,456.19000244140625,454.3599853515625,459.5899963378906,458.3399963378906,457.7799987792969]}],"adjclose":[{"adjclose":[366.1478271484375,373.7039489746094,386.59027099609375,391.1319580078125,390.4432067871094,393.31793212890625,394.53570556640625,424.6204528808594,434.48236083984375,435.3707275390625,432.5159606933594,432.555908203125,437.3670654296875,437.9260559082031,448.4367370605469,448.3169860839844,452.1099853515625,453.1300048828125,454.2699890136719,458.8699951171875,458.1700134277344,452.57000732421875]}]}}],"error":null}}; 
    // const data = response.chart.result[0].indicators.quote[0]; 

    // Get indicator data 
    // response.chart.result[0].indicators.quote[0]
    // ['volume', 'close', 'low', 'open', 'high'] data 
    // for label Object.label(data)
    // console.log(Object.keys(data)); 
    // console.log(response.chart.result[0].timestamp);
    // console.log(Object.values(data)[1]); 
    return response.chart.result[0];
}

export default CallData;